{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/subject.service\";\nimport * as i3 from \"../../services/professor.service\";\nimport * as i4 from \"@angular/router\";\nfunction SubjectFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 29)(2, \"div\", 30)(3, \"span\", 31);\n    i0.ɵɵtext(4, \"Cargando...\");\n    i0.ɵɵelementEnd()()()();\n  }\n}\nfunction SubjectFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 32);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\nfunction SubjectFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 33);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.success, \" \");\n  }\n}\nfunction SubjectFormComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" El nombre de la materia es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectFormComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" El c\\u00F3digo de la materia es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectFormComponent_div_34_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El n\\u00FAmero de cr\\u00E9ditos es requerido.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectFormComponent_div_34_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Los cr\\u00E9ditos deben estar entre 1 y 5.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubjectFormComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtemplate(1, SubjectFormComponent_div_34_div_1_Template, 2, 0, \"div\", 35);\n    i0.ɵɵtemplate(2, SubjectFormComponent_div_34_div_2_Template, 2, 0, \"div\", 35);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r5.subjectForm.get(\"creditos\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r5.subjectForm.get(\"creditos\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"min\"]) || ((tmp_1_0 = ctx_r5.subjectForm.get(\"creditos\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"max\"]));\n  }\n}\nfunction SubjectFormComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const professor_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", professor_r10.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", professor_r10.name || professor_r10.nombre + \" \" + professor_r10.apellido, \" \");\n  }\n}\nfunction SubjectFormComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵtext(1, \" Debes seleccionar un profesor. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class SubjectFormComponent {\n  constructor(formBuilder, subjectService, professorService, router) {\n    this.formBuilder = formBuilder;\n    this.subjectService = subjectService;\n    this.professorService = professorService;\n    this.router = router;\n    this.professors = [];\n    this.loading = false;\n    this.error = '';\n    this.success = '';\n  }\n  ngOnInit() {\n    this.initForm();\n    this.loadProfessors();\n  }\n  initForm() {\n    this.subjectForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      codigo: ['', [Validators.required]],\n      creditos: ['', [Validators.required, Validators.min(1), Validators.max(5)]],\n      profesorId: ['', [Validators.required]]\n    });\n  }\n  loadProfessors() {\n    this.loading = true;\n    this.professorService.getProfessors().subscribe({\n      next: professors => {\n        this.professors = professors;\n        console.log('Profesores cargados:', professors);\n        this.loading = false;\n      },\n      error: err => {\n        this.error = 'Error al cargar profesores';\n        this.loading = false;\n        console.error('Error al cargar profesores:', err);\n      }\n    });\n  }\n  onSubmit() {\n    if (this.subjectForm.invalid) {\n      console.log('Formulario inválido:', this.subjectForm.errors);\n      return;\n    }\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n    const subjectData = this.subjectForm.value;\n    console.log('Datos del formulario:', subjectData);\n    // Create the MateriaDto object to send to the API\n    const materiaDto = {\n      nombre: subjectData.nombre,\n      codigo: subjectData.codigo,\n      creditos: subjectData.creditos,\n      profesorId: subjectData.profesorId\n    };\n    console.log('MateriaDto a enviar:', materiaDto);\n    this.subjectService.createSubject(materiaDto).subscribe({\n      next: response => {\n        console.log('Respuesta exitosa:', response);\n        this.success = 'Materia registrada correctamente';\n        this.loading = false;\n        this.subjectForm.reset();\n        // Optionally navigate to subject list\n        // this.router.navigate(['/subjects']);\n      },\n\n      error: err => {\n        console.error('Error en componente:', err);\n        this.error = err.message || 'Error al registrar la materia';\n        this.loading = false;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function SubjectFormComponent_Factory(t) {\n      return new (t || SubjectFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SubjectService), i0.ɵɵdirectiveInject(i3.ProfessorService), i0.ɵɵdirectiveInject(i4.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SubjectFormComponent,\n      selectors: [[\"app-subject-form\"]],\n      decls: 52,\n      vars: 19,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"text-muted\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"card\", \"shadow\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"bi\", \"bi-book\", \"me-2\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"nombre\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nombre\", \"formControlName\", \"nombre\", 1, \"form-control\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"codigo\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"codigo\", \"formControlName\", \"codigo\", 1, \"form-control\"], [\"for\", \"creditos\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"creditos\", \"formControlName\", \"creditos\", \"min\", \"1\", \"max\", \"5\", 1, \"form-control\"], [\"for\", \"profesorId\", 1, \"form-label\"], [\"id\", \"profesorId\", \"formControlName\", \"profesorId\", 1, \"form-select\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-text\", \"text-muted\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"bi\", \"bi-plus-circle\", \"me-2\"], [\"type\", \"button\", \"routerLink\", \"/subjects\", 1, \"btn\", \"btn-secondary\"], [1, \"bi\", \"bi-arrow-left\", \"me-2\"], [1, \"col-md-12\", \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"visually-hidden\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [3, \"value\"]],\n      template: function SubjectFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n          i0.ɵɵtext(4, \"Registro de Materias\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"p\", 3);\n          i0.ɵɵtext(6, \"Registra una nueva materia y as\\u00EDgnale un profesor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"hr\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(8, SubjectFormComponent_div_8_Template, 5, 0, \"div\", 4);\n          i0.ɵɵtemplate(9, SubjectFormComponent_div_9_Template, 4, 1, \"div\", 4);\n          i0.ɵɵtemplate(10, SubjectFormComponent_div_10_Template, 4, 1, \"div\", 4);\n          i0.ɵɵelementStart(11, \"div\", 1)(12, \"div\", 5)(13, \"div\", 6)(14, \"div\", 7)(15, \"h4\");\n          i0.ɵɵelement(16, \"i\", 8);\n          i0.ɵɵtext(17, \"Registrar Nueva Materia\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(18, \"div\", 9)(19, \"form\", 10);\n          i0.ɵɵlistener(\"ngSubmit\", function SubjectFormComponent_Template_form_ngSubmit_19_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(20, \"div\", 11)(21, \"label\", 12);\n          i0.ɵɵtext(22, \"Nombre de la Materia\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 13);\n          i0.ɵɵtemplate(24, SubjectFormComponent_div_24_Template, 2, 0, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 11)(26, \"label\", 15);\n          i0.ɵɵtext(27, \"C\\u00F3digo de la Materia\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 16);\n          i0.ɵɵtemplate(29, SubjectFormComponent_div_29_Template, 2, 0, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 11)(31, \"label\", 17);\n          i0.ɵɵtext(32, \"Cr\\u00E9ditos\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(33, \"input\", 18);\n          i0.ɵɵtemplate(34, SubjectFormComponent_div_34_Template, 3, 2, \"div\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"div\", 11)(36, \"label\", 19);\n          i0.ɵɵtext(37, \"Profesor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"select\", 20)(39, \"option\", 21);\n          i0.ɵɵtext(40, \"-- Selecciona un profesor --\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(41, SubjectFormComponent_option_41_Template, 2, 2, \"option\", 22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(42, SubjectFormComponent_div_42_Template, 2, 0, \"div\", 14);\n          i0.ɵɵelementStart(43, \"div\", 23);\n          i0.ɵɵtext(44);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"div\", 24)(46, \"button\", 25);\n          i0.ɵɵelement(47, \"i\", 26);\n          i0.ɵɵtext(48, \"Registrar Materia \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(49, \"button\", 27);\n          i0.ɵɵelement(50, \"i\", 28);\n          i0.ɵɵtext(51, \"Volver a la Lista \");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_12_0;\n          let tmp_13_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.success);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.subjectForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_4_0 = ctx.subjectForm.get(\"nombre\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.subjectForm.get(\"nombre\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.subjectForm.get(\"nombre\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.subjectForm.get(\"nombre\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_6_0 = ctx.subjectForm.get(\"codigo\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.subjectForm.get(\"codigo\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.subjectForm.get(\"codigo\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.subjectForm.get(\"codigo\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_8_0 = ctx.subjectForm.get(\"creditos\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.subjectForm.get(\"creditos\")) == null ? null : tmp_8_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.subjectForm.get(\"creditos\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.subjectForm.get(\"creditos\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"is-invalid\", ((tmp_10_0 = ctx.subjectForm.get(\"profesorId\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.subjectForm.get(\"profesorId\")) == null ? null : tmp_10_0.touched));\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.professors);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.subjectForm.get(\"profesorId\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.subjectForm.get(\"profesorId\")) == null ? null : tmp_12_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" Valor actual: \", (tmp_13_0 = ctx.subjectForm.get(\"profesorId\")) == null ? null : tmp_13_0.value, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.subjectForm.invalid || ctx.loading);\n        }\n      },\n      styles: [\".card[_ngcontent-%COMP%] {\\n  border-radius: 10px;\\n  overflow: hidden;\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus {\\n  border-color: #80bdff;\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  border-color: #007bff;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0069d9;\\n  border-color: #0062cc;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  background-color: #6c757d;\\n  border-color: #6c757d;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%]:hover {\\n  background-color: #5a6268;\\n  border-color: #545b62;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9zdWJqZWN0LWZvcm0vc3ViamVjdC1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdEQUFnRDtBQUNsRDs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7QUFDdkIiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi5jYXJkLWhlYWRlciB7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbi5mb3JtLWNvbnRyb2w6Zm9jdXMsIC5mb3JtLXNlbGVjdDpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzgwYmRmZjtcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMCwgMTIzLCAyNTUsIDAuMjUpO1xufVxuXG4uYnRuLXByaW1hcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICBib3JkZXItY29sb3I6ICMwMDdiZmY7XG59XG5cbi5idG4tcHJpbWFyeTpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDY5ZDk7XG4gIGJvcmRlci1jb2xvcjogIzAwNjJjYztcbn1cblxuLmJ0bi1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmM3NTdkO1xuICBib3JkZXItY29sb3I6ICM2Yzc1N2Q7XG59XG5cbi5idG4tc2Vjb25kYXJ5OmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVhNjI2ODtcbiAgYm9yZGVyLWNvbG9yOiAjNTQ1YjYyO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","SubjectFormComponent","constructor","formBuilder","subjectService","professorService","router","ngOnInit","initForm","loadProfessors","subjectForm","group","nombre","required","codigo","creditos","min","max","profesorId","loading","getProfessors","subscribe","next","professors","console","log","error","err","onSubmit","invalid","errors","success","subjectData","value","materiaDto","createSubject","response","reset","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\components\\subject-form\\subject-form.component.ts","C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\components\\subject-form\\subject-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from '../../models/subject.model';\nimport { Professor } from '../../models/professor.model';\nimport { SubjectService } from '../../services/subject.service';\nimport { ProfessorService } from '../../services/professor.service';\n\n@Component({\n  selector: 'app-subject-form',\n  templateUrl: './subject-form.component.html',\n  styleUrls: ['./subject-form.component.css']\n})\nexport class SubjectFormComponent implements OnInit {\n  subjectForm!: FormGroup;\n  professors: Professor[] = [];\n  loading = false;\n  error = '';\n  success = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private subjectService: SubjectService,\n    private professorService: ProfessorService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.loadProfessors();\n  }\n\n  initForm(): void {\n    this.subjectForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      codigo: ['', [Validators.required]],\n      creditos: ['', [Validators.required, Validators.min(1), Validators.max(5)]],\n      profesorId: ['', [Validators.required]]\n    });\n  }\n\n  loadProfessors(): void {\n    this.loading = true;\n    this.professorService.getProfessors().subscribe({\n      next: (professors) => {\n        this.professors = professors;\n        console.log('Profesores cargados:', professors);\n        this.loading = false;\n      },\n      error: (err) => {\n        this.error = 'Error al cargar profesores';\n        this.loading = false;\n        console.error('Error al cargar profesores:', err);\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.subjectForm.invalid) {\n      console.log('Formulario inválido:', this.subjectForm.errors);\n      return;\n    }\n\n    this.loading = true;\n    this.error = '';\n    this.success = '';\n\n    const subjectData = this.subjectForm.value;\n    console.log('Datos del formulario:', subjectData);\n    \n    // Create the MateriaDto object to send to the API\n    const materiaDto = {\n      nombre: subjectData.nombre,\n      codigo: subjectData.codigo,\n      creditos: subjectData.creditos,\n      profesorId: subjectData.profesorId\n    };\n    \n    console.log('MateriaDto a enviar:', materiaDto);\n\n    this.subjectService.createSubject(materiaDto).subscribe({\n      next: (response) => {\n        console.log('Respuesta exitosa:', response);\n        this.success = 'Materia registrada correctamente';\n        this.loading = false;\n        this.subjectForm.reset();\n        // Optionally navigate to subject list\n        // this.router.navigate(['/subjects']);\n      },\n      error: (err) => {\n        console.error('Error en componente:', err);\n        this.error = err.message || 'Error al registrar la materia';\n        this.loading = false;\n      }\n    });\n  }\n}","<div class=\"container mt-4\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <h2>Registro de Materias</h2>\n      <p class=\"text-muted\">Registra una nueva materia y asígnale un profesor</p>\n      <hr>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"loading\">\n    <div class=\"col-md-12 text-center\">\n      <div class=\"spinner-border text-primary\" role=\"status\">\n        <span class=\"visually-hidden\">Cargando...</span>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"error\">\n    <div class=\"col-md-12\">\n      <div class=\"alert alert-danger\">\n        {{ error }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\" *ngIf=\"success\">\n    <div class=\"col-md-12\">\n      <div class=\"alert alert-success\">\n        {{ success }}\n      </div>\n    </div>\n  </div>\n\n  <!-- Formulario de Registro de Materias -->\n  <div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n      <div class=\"card shadow\">\n        <div class=\"card-header bg-primary text-white\">\n          <h4><i class=\"bi bi-book me-2\"></i>Registrar Nueva Materia</h4>\n        </div>\n        <div class=\"card-body\">\n          <form [formGroup]=\"subjectForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n              <label for=\"nombre\" class=\"form-label\">Nombre de la Materia</label>\n              <input type=\"text\" id=\"nombre\" formControlName=\"nombre\" class=\"form-control\" \n                     [class.is-invalid]=\"subjectForm.get('nombre')?.invalid && subjectForm.get('nombre')?.touched\">\n              <div *ngIf=\"subjectForm.get('nombre')?.invalid && subjectForm.get('nombre')?.touched\" class=\"invalid-feedback\">\n                El nombre de la materia es requerido.\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"codigo\" class=\"form-label\">Código de la Materia</label>\n              <input type=\"text\" id=\"codigo\" formControlName=\"codigo\" class=\"form-control\" \n                     [class.is-invalid]=\"subjectForm.get('codigo')?.invalid && subjectForm.get('codigo')?.touched\">\n              <div *ngIf=\"subjectForm.get('codigo')?.invalid && subjectForm.get('codigo')?.touched\" class=\"invalid-feedback\">\n                El código de la materia es requerido.\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"creditos\" class=\"form-label\">Créditos</label>\n              <input type=\"number\" id=\"creditos\" formControlName=\"creditos\" class=\"form-control\" min=\"1\" max=\"5\"\n                     [class.is-invalid]=\"subjectForm.get('creditos')?.invalid && subjectForm.get('creditos')?.touched\">\n              <div *ngIf=\"subjectForm.get('creditos')?.invalid && subjectForm.get('creditos')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"subjectForm.get('creditos')?.errors?.['required']\">El número de créditos es requerido.</div>\n                <div *ngIf=\"subjectForm.get('creditos')?.errors?.['min'] || subjectForm.get('creditos')?.errors?.['max']\">Los créditos deben estar entre 1 y 5.</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"profesorId\" class=\"form-label\">Profesor</label>\n              <select id=\"profesorId\" formControlName=\"profesorId\" class=\"form-select\" \n                      [class.is-invalid]=\"subjectForm.get('profesorId')?.invalid && subjectForm.get('profesorId')?.touched\">\n                <option value=\"\">-- Selecciona un profesor --</option>\n                <option *ngFor=\"let professor of professors\" [value]=\"professor.id\">\n                  {{ professor.name || (professor.nombre + ' ' + professor.apellido) }}\n                </option>\n              </select>\n              <div *ngIf=\"subjectForm.get('profesorId')?.invalid && subjectForm.get('profesorId')?.touched\" class=\"invalid-feedback\">\n                Debes seleccionar un profesor.\n              </div>\n              <div class=\"form-text text-muted\">\n                Valor actual: {{ subjectForm.get('profesorId')?.value }}\n              </div>\n            </div>\n            \n            <div class=\"d-grid gap-2\">\n              <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"subjectForm.invalid || loading\">\n                <i class=\"bi bi-plus-circle me-2\"></i>Registrar Materia\n              </button>\n              <button type=\"button\" class=\"btn btn-secondary\" routerLink=\"/subjects\">\n                <i class=\"bi bi-arrow-left me-2\"></i>Volver a la Lista\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}