{"ast":null,"code":"import { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servicios/autenticacion.servicio\";\nimport * as i2 from \"../servicios/asignatura.servicio\";\nimport * as i3 from \"@angular/router\";\nexport class MateriasEstudianteGuard {\n  constructor(autenticacionServicio, asignaturaServicio, router) {\n    this.autenticacionServicio = autenticacionServicio;\n    this.asignaturaServicio = asignaturaServicio;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!this.autenticacionServicio.esEstudiante()) {\n      return true;\n    }\n    const asignaturaId = +route.paramMap.get('id');\n    const estudianteId = this.autenticacionServicio.obtenerIdUsuarioActual();\n    if (!estudianteId) {\n      this.router.navigate(['/mis-materias']);\n      return false;\n    }\n    return this.asignaturaServicio.verificarInscripcion(asignaturaId, estudianteId).pipe(map(inscrito => {\n      if (inscrito) {\n        return true;\n      }\n      this.router.navigate(['/mis-materias']);\n      return false;\n    }), catchError(() => {\n      this.router.navigate(['/mis-materias']);\n      return of(false);\n    }));\n  }\n  static {\n    this.ɵfac = function MateriasEstudianteGuard_Factory(t) {\n      return new (t || MateriasEstudianteGuard)(i0.ɵɵinject(i1.AutenticacionServicio), i0.ɵɵinject(i2.AsignaturaServicio), i0.ɵɵinject(i3.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MateriasEstudianteGuard,\n      factory: MateriasEstudianteGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAIA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAKhD,OAAM,MAAOC,uBAAuB;EAClCC,YACUC,qBAA4C,EAC5CC,kBAAsC,EACtCC,MAAc;IAFd,0BAAqB,GAArBF,qBAAqB;IACrB,uBAAkB,GAAlBC,kBAAkB;IAClB,WAAM,GAANC,MAAM;EACb;EAEHC,WAAW,CAACC,KAA6B,EAAEC,KAA0B;IACnE,IAAI,CAAC,IAAI,CAACL,qBAAqB,CAACM,YAAY,EAAE,EAAE;MAC9C,OAAO,IAAI;;IAGb,MAAMC,YAAY,GAAG,CAACH,KAAK,CAACI,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IAC/C,MAAMC,YAAY,GAAG,IAAI,CAACV,qBAAqB,CAACW,sBAAsB,EAAE;IAExE,IAAI,CAACD,YAAY,EAAE;MACjB,IAAI,CAACR,MAAM,CAACU,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACvC,OAAO,KAAK;;IAGd,OAAO,IAAI,CAACX,kBAAkB,CAACY,oBAAoB,CAACN,YAAY,EAAEG,YAAY,CAAC,CAACI,IAAI,CAClFlB,GAAG,CAACmB,QAAQ,IAAG;MACb,IAAIA,QAAQ,EAAE;QACZ,OAAO,IAAI;;MAEb,IAAI,CAACb,MAAM,CAACU,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACvC,OAAO,KAAK;IACd,CAAC,CAAC,EACFf,UAAU,CAAC,MAAK;MACd,IAAI,CAACK,MAAM,CAACU,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MACvC,OAAOjB,EAAE,CAAC,KAAK,CAAC;IAClB,CAAC,CAAC,CACH;EACH;;;uBAjCWG,uBAAuB;IAAA;EAAA;;;aAAvBA,uBAAuB;MAAAkB,SAAvBlB,uBAAuB;MAAAmB,YAFtB;IAAM;EAAA","names":["of","map","catchError","MateriasEstudianteGuard","constructor","autenticacionServicio","asignaturaServicio","router","canActivate","route","state","esEstudiante","asignaturaId","paramMap","get","estudianteId","obtenerIdUsuarioActual","navigate","verificarInscripcion","pipe","inscrito","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\guards\\materias-estudiante.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AutenticacionServicio } from '../servicios/autenticacion.servicio';\nimport { AsignaturaServicio } from '../servicios/asignatura.servicio';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MateriasEstudianteGuard implements CanActivate {\n  constructor(\n    private autenticacionServicio: AutenticacionServicio,\n    private asignaturaServicio: AsignaturaServicio,\n    private router: Router\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n    if (!this.autenticacionServicio.esEstudiante()) {\n      return true;\n    }\n    \n    const asignaturaId = +route.paramMap.get('id')!;\n    const estudianteId = this.autenticacionServicio.obtenerIdUsuarioActual();\n    \n    if (!estudianteId) {\n      this.router.navigate(['/mis-materias']);\n      return false;\n    }\n    \n    return this.asignaturaServicio.verificarInscripcion(asignaturaId, estudianteId).pipe(\n      map(inscrito => {\n        if (inscrito) {\n          return true;\n        }\n        this.router.navigate(['/mis-materias']);\n        return false;\n      }),\n      catchError(() => {\n        this.router.navigate(['/mis-materias']);\n        return of(false);\n      })\n    );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}