{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/professor.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction ProfessorFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction ProfessorFormComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfessorFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, ProfessorFormComponent_div_15_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.professorForm.get(\"nombre\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction ProfessorFormComponent_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El apellido es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfessorFormComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, ProfessorFormComponent_div_20_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.professorForm.get(\"apellido\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction ProfessorFormComponent_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El correo electru00f3nico es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfessorFormComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Ingrese un correo electru00f3nico vu00e1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProfessorFormComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, ProfessorFormComponent_div_25_div_1_Template, 2, 0, \"div\", 31);\n    i0.ɵɵtemplate(2, ProfessorFormComponent_div_25_div_2_Template, 2, 0, \"div\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.professorForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.professorForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction ProfessorFormComponent_span_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 32);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class ProfessorFormComponent {\n  constructor(formBuilder, professorService, route, router) {\n    this.formBuilder = formBuilder;\n    this.professorService = professorService;\n    this.route = route;\n    this.router = router;\n    this.isLoading = false;\n    this.error = null;\n    this.isEditMode = false;\n  }\n  ngOnInit() {\n    this.initForm();\n    // Verificar si estamos en modo edición\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.professorId = +params['id'];\n        this.loadProfessorData(this.professorId);\n      }\n    });\n  }\n  initForm() {\n    this.professorForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      apellido: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      departamento: ['', [Validators.required]],\n      especialidad: [''],\n      telefono: [''],\n      direccion: ['']\n    });\n  }\n  loadProfessorData(id) {\n    this.isLoading = true;\n    this.error = null;\n    this.professorService.getProfessor(id).subscribe({\n      next: professor => {\n        this.professorForm.patchValue({\n          nombre: professor.nombre,\n          apellido: professor.apellido || '',\n          email: professor.email,\n          departamento: professor.departamento || '',\n          especialidad: professor.especialidad || '',\n          telefono: professor.telefono || '',\n          direccion: professor.direccion || ''\n        });\n        this.isLoading = false;\n      },\n      error: error => {\n        this.error = error.message || 'Error al cargar los datos del profesor';\n        this.isLoading = false;\n      }\n    });\n  }\n  onSubmit() {\n    if (this.professorForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.error = null;\n    const professorData = {\n      nombre: this.professorForm.value.nombre,\n      apellido: this.professorForm.value.apellido,\n      email: this.professorForm.value.email,\n      especialidad: this.professorForm.value.especialidad,\n      telefono: this.professorForm.value.telefono,\n      direccion: this.professorForm.value.direccion\n    };\n    if (this.isEditMode && this.professorId) {\n      this.professorService.updateProfessor(this.professorId, professorData).subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.router.navigate(['/professors']);\n        },\n        error: error => {\n          this.isLoading = false;\n          this.error = error.message || 'Error al actualizar el profesor';\n        }\n      });\n    } else {\n      this.professorService.createProfessor(professorData).subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.router.navigate(['/professors']);\n        },\n        error: error => {\n          this.isLoading = false;\n          this.error = error.message || 'Error al crear el profesor';\n        }\n      });\n    }\n  }\n  onCancel() {\n    this.router.navigate(['/professors']);\n  }\n  static {\n    this.ɵfac = function ProfessorFormComponent_Factory(t) {\n      return new (t || ProfessorFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProfessorService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProfessorFormComponent,\n      selectors: [[\"app-professor-form\"]],\n      decls: 45,\n      vars: 18,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"for\", \"nombre\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nombre\", \"formControlName\", \"nombre\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"apellido\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"apellido\", \"formControlName\", \"apellido\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"especialidad\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"especialidad\", \"formControlName\", \"especialidad\", 1, \"form-control\"], [\"for\", \"telefono\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"telefono\", \"formControlName\", \"telefono\", 1, \"form-control\"], [\"for\", \"direccion\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"direccion\", \"formControlName\", \"direccion\", 1, \"form-control\"], [1, \"d-flex\", \"justify-content-end\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function ProfessorFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, ProfessorFormComponent_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementStart(9, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function ProfessorFormComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10)(12, \"label\", 11);\n          i0.ɵɵtext(13, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 12);\n          i0.ɵɵtemplate(15, ProfessorFormComponent_div_15_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 14);\n          i0.ɵɵtext(18, \"Apellido\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 15);\n          i0.ɵɵtemplate(20, ProfessorFormComponent_div_20_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 16)(22, \"label\", 17);\n          i0.ɵɵtext(23, \"Correo Electru00f3nico\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 18);\n          i0.ɵɵtemplate(25, ProfessorFormComponent_div_25_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 16)(27, \"label\", 19);\n          i0.ɵɵtext(28, \"Especialidad\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 9)(31, \"div\", 10)(32, \"label\", 21);\n          i0.ɵɵtext(33, \"Telu00e9fono\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"input\", 22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(35, \"div\", 10)(36, \"label\", 23);\n          i0.ɵɵtext(37, \"Direcciu00f3n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(38, \"input\", 24);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(39, \"div\", 25)(40, \"button\", 26);\n          i0.ɵɵlistener(\"click\", function ProfessorFormComponent_Template_button_click_40_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(41, \" Cancelar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"button\", 27);\n          i0.ɵɵtemplate(43, ProfessorFormComponent_span_43_Template, 1, 0, \"span\", 28);\n          i0.ɵɵtext(44);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\"\", ctx.isEditMode ? \"Editar\" : \"Agregar\", \" Profesor\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.professorForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ((tmp_3_0 = ctx.professorForm.get(\"nombre\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.professorForm.get(\"nombre\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.professorForm.get(\"nombre\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.professorForm.get(\"nombre\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ((tmp_5_0 = ctx.professorForm.get(\"apellido\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.professorForm.get(\"apellido\")) == null ? null : tmp_5_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.professorForm.get(\"apellido\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.professorForm.get(\"apellido\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ((tmp_7_0 = ctx.professorForm.get(\"email\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.professorForm.get(\"email\")) == null ? null : tmp_7_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.professorForm.get(\"email\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.professorForm.get(\"email\")) == null ? null : tmp_8_0.touched));\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"disabled\", ctx.professorForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Actualizar\" : \"Guardar\", \" \");\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #007bff !important;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  border-color: #80bdff;\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wcm9mZXNzb3ItZm9ybS9wcm9mZXNzb3ItZm9ybS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLGdEQUFnRDtBQUNsRCIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZiAhaW1wb3J0YW50O1xufVxuXG4uZm9ybS1jb250cm9sOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjODBiZGZmO1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgwLCAxMjMsIDI1NSwgMC4yNSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","ProfessorFormComponent","constructor","formBuilder","professorService","route","router","ngOnInit","initForm","params","subscribe","isEditMode","professorId","loadProfessorData","professorForm","group","nombre","required","apellido","email","departamento","especialidad","telefono","direccion","id","isLoading","error","getProfessor","next","professor","patchValue","message","onSubmit","invalid","professorData","value","updateProfessor","navigate","createProfessor","onCancel","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\Prueba interrapidisimp\\frontend\\src\\app\\components\\professor-form\\professor-form.component.ts","C:\\Users\\hansk\\Videos\\Prueba interrapidisimp\\frontend\\src\\app\\components\\professor-form\\professor-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Professor } from '../../models/professor.model';\nimport { ProfessorService } from '../../services/professor.service';\n\n@Component({\n  selector: 'app-professor-form',\n  templateUrl: './professor-form.component.html',\n  styleUrls: ['./professor-form.component.css']\n})\nexport class ProfessorFormComponent implements OnInit {\n  professorForm!: FormGroup;\n  isLoading = false;\n  error: string | null = null;\n  isEditMode = false;\n  professorId?: number;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private professorService: ProfessorService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n\n    // Verificar si estamos en modo edición\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isEditMode = true;\n        this.professorId = +params['id'];\n        this.loadProfessorData(this.professorId);\n      }\n    });\n  }\n\n  private initForm(): void {\n    this.professorForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      apellido: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      departamento: ['', [Validators.required]],\n      especialidad: [''],\n      telefono: [''],\n      direccion: ['']\n    });\n  }\n\n  private loadProfessorData(id: number): void {\n    this.isLoading = true;\n    this.error = null;\n\n    this.professorService.getProfessor(id).subscribe({\n      next: (professor) => {\n        this.professorForm.patchValue({\n          nombre: professor.nombre,\n          apellido: professor.apellido || '',\n          email: professor.email,\n          departamento: professor.departamento || '',\n          especialidad: professor.especialidad || '',\n          telefono: professor.telefono || '',\n          direccion: professor.direccion || ''\n        });\n        this.isLoading = false;\n      },\n      error: (error) => {\n        this.error = error.message || 'Error al cargar los datos del profesor';\n        this.isLoading = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    if (this.professorForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.error = null;\n\n    const professorData: Professor = {\n      nombre: this.professorForm.value.nombre,\n      apellido: this.professorForm.value.apellido,\n      email: this.professorForm.value.email,\n      especialidad: this.professorForm.value.especialidad,\n      telefono: this.professorForm.value.telefono,\n      direccion: this.professorForm.value.direccion\n    };\n\n    if (this.isEditMode && this.professorId) {\n      this.professorService.updateProfessor(this.professorId, professorData).subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.router.navigate(['/professors']);\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.error = error.message || 'Error al actualizar el profesor';\n        }\n      });\n    } else {\n      this.professorService.createProfessor(professorData).subscribe({\n        next: () => {\n          this.isLoading = false;\n          this.router.navigate(['/professors']);\n        },\n        error: (error) => {\n          this.isLoading = false;\n          this.error = error.message || 'Error al crear el profesor';\n        }\n      });\n    }\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/professors']);\n  }\n}","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card\">\n        <div class=\"card-header bg-primary text-white\">\n          <h4 class=\"mb-0\">{{ isEditMode ? 'Editar' : 'Agregar' }} Profesor</h4>\n        </div>\n        <div class=\"card-body\">\n          <div *ngIf=\"error\" class=\"alert alert-danger\">\n            {{ error }}\n          </div>\n\n          <form [formGroup]=\"professorForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"row mb-3\">\n              <div class=\"col-md-6\">\n                <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                <input \n                  type=\"text\" \n                  id=\"nombre\" \n                  formControlName=\"nombre\" \n                  class=\"form-control\" \n                  [ngClass]=\"{'is-invalid': professorForm.get('nombre')?.invalid && professorForm.get('nombre')?.touched}\"\n                >\n                <div *ngIf=\"professorForm.get('nombre')?.invalid && professorForm.get('nombre')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"professorForm.get('nombre')?.errors?.['required']\">El nombre es obligatorio</div>\n                </div>\n              </div>\n              \n              <div class=\"col-md-6\">\n                <label for=\"apellido\" class=\"form-label\">Apellido</label>\n                <input \n                  type=\"text\" \n                  id=\"apellido\" \n                  formControlName=\"apellido\" \n                  class=\"form-control\" \n                  [ngClass]=\"{'is-invalid': professorForm.get('apellido')?.invalid && professorForm.get('apellido')?.touched}\"\n                >\n                <div *ngIf=\"professorForm.get('apellido')?.invalid && professorForm.get('apellido')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"professorForm.get('apellido')?.errors?.['required']\">El apellido es obligatorio</div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Correo Electru00f3nico</label>\n              <input \n                type=\"email\" \n                id=\"email\" \n                formControlName=\"email\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': professorForm.get('email')?.invalid && professorForm.get('email')?.touched}\"\n              >\n              <div *ngIf=\"professorForm.get('email')?.invalid && professorForm.get('email')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"professorForm.get('email')?.errors?.['required']\">El correo electru00f3nico es obligatorio</div>\n                <div *ngIf=\"professorForm.get('email')?.errors?.['email']\">Ingrese un correo electru00f3nico vu00e1lido</div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"especialidad\" class=\"form-label\">Especialidad</label>\n              <input \n                type=\"text\" \n                id=\"especialidad\" \n                formControlName=\"especialidad\" \n                class=\"form-control\"\n              >\n            </div>\n\n            <div class=\"row mb-3\">\n              <div class=\"col-md-6\">\n                <label for=\"telefono\" class=\"form-label\">Telu00e9fono</label>\n                <input \n                  type=\"text\" \n                  id=\"telefono\" \n                  formControlName=\"telefono\" \n                  class=\"form-control\"\n                >\n              </div>\n              \n              <div class=\"col-md-6\">\n                <label for=\"direccion\" class=\"form-label\">Direcciu00f3n</label>\n                <input \n                  type=\"text\" \n                  id=\"direccion\" \n                  formControlName=\"direccion\" \n                  class=\"form-control\"\n                >\n              </div>\n            </div>\n\n            <div class=\"d-flex justify-content-end gap-2\">\n              <button \n                type=\"button\" \n                class=\"btn btn-secondary\" \n                (click)=\"onCancel()\"\n              >\n                Cancelar\n              </button>\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\" \n                [disabled]=\"professorForm.invalid || isLoading\"\n              >\n                <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                {{ isEditMode ? 'Actualizar' : 'Guardar' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}