{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DetalleMateriaComponente = class DetalleMateriaComponente {\n  constructor(ruta, materiaServicio, autenticacionServicio, inscripcionServicio) {\n    this.ruta = ruta;\n    this.materiaServicio = materiaServicio;\n    this.autenticacionServicio = autenticacionServicio;\n    this.inscripcionServicio = inscripcionServicio;\n    this.materia = null;\n    this.estudiantes = [];\n    this.companeros = [];\n    this.cargando = false;\n    this.error = '';\n    this.usuarioActualId = null;\n    this.esEstudiante = false;\n    this.esProfesor = false;\n  }\n  ngOnInit() {\n    this.usuarioActualId = this.autenticacionServicio.obtenerUsuarioActualId();\n    this.esEstudiante = this.autenticacionServicio.esEstudiante();\n    this.esProfesor = this.autenticacionServicio.esProfesor && this.autenticacionServicio.esProfesor();\n    this.ruta.params.subscribe(params => {\n      const id = params['id'];\n      if (id && !isNaN(Number(id))) {\n        const materiaId = Number(id);\n        this.cargarMateria(materiaId);\n        if (!this.esEstudiante) {\n          this.cargarEstudiantes(materiaId);\n        } else if (this.usuarioActualId) {\n          this.cargarCompaneros(materiaId, this.usuarioActualId);\n        }\n      } else {\n        this.error = 'ID de materia inválido';\n      }\n    });\n  }\n  cargarMateria(id) {\n    if (!id || isNaN(id)) {\n      this.error = 'ID de materia inválido';\n      return;\n    }\n    this.cargando = true;\n    this.materiaServicio.obtenerMateria(id).subscribe({\n      next: data => {\n        this.materia = data;\n        this.cargando = false;\n      },\n      error: err => {\n        this.error = 'Error al cargar datos de la materia';\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n  cargarEstudiantes(materiaId) {\n    if (!materiaId || isNaN(materiaId)) {\n      this.error = 'ID de materia inválido';\n      return;\n    }\n    this.cargando = true;\n    this.materiaServicio.obtenerEstudiantesPorMateria(materiaId, this.esProfesor).subscribe({\n      next: data => {\n        this.estudiantes = data;\n        this.cargando = false;\n      },\n      error: err => {\n        if (err.message === 'NO_PERMISOS') {\n          this.error = 'No tienes permisos para ver los estudiantes de esta materia.';\n        } else if (err.message === 'NO_ENCONTRADO') {\n          this.error = 'Materia no encontrada.';\n        } else {\n          this.error = 'Error al cargar estudiantes de la materia';\n        }\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n  cargarCompaneros(materiaId, estudianteId) {\n    if (!materiaId || isNaN(materiaId) || !estudianteId || isNaN(estudianteId)) {\n      this.error = 'ID de materia o estudiante inválido';\n      return;\n    }\n    this.cargando = true;\n    this.inscripcionServicio.obtenerCompaneros(materiaId, estudianteId).subscribe({\n      next: data => {\n        this.companeros = data;\n        this.cargando = false;\n      },\n      error: err => {\n        this.error = 'Error al cargar compañeros de clase';\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n};\nDetalleMateriaComponente = __decorate([Component({\n  selector: 'app-detalle-materia',\n  templateUrl: './detalle-materia.componente.html',\n  styleUrls: ['./detalle-materia.componente.css']\n})], DetalleMateriaComponente);\nexport { DetalleMateriaComponente };","map":{"version":3,"mappings":"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","names":["Component","DetalleMateriaComponente","constructor","ruta","materiaServicio","autenticacionServicio","inscripcionServicio","ngOnInit","usuarioActualId","obtenerUsuarioActualId","esEstudiante","esProfesor","params","subscribe","id","isNaN","Number","materiaId","cargarMateria","cargarEstudiantes","cargarCompaneros","error","cargando","obtenerMateria","next","data","materia","err","console","obtenerEstudiantesPorMateria","estudiantes","message","estudianteId","obtenerCompaneros","companeros","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\componentes\\asignaturas\\detalle-materia.componente.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Materia } from '../../modelos/materia.modelo';\nimport { Estudiante } from '../../modelos/estudiante.modelo';\nimport { MateriaServicio } from '../../servicios/materia.servicio';\nimport { AutenticacionServicio } from '../../servicios/autenticacion.servicio';\nimport { InscripcionServicio } from '../../servicios/inscripcion.servicio';\n\n@Component({\n  selector: 'app-detalle-materia',\n  templateUrl: './detalle-materia.componente.html',\n  styleUrls: ['./detalle-materia.componente.css']\n})\nexport class DetalleMateriaComponente implements OnInit {\n  materia: Materia | null = null;\n  estudiantes: Estudiante[] = [];\n  companeros: Estudiante[] = [];\n  cargando = false;\n  error = '';\n  usuarioActualId: number | null = null;\n  esEstudiante = false;\n  esProfesor = false;\n\n  constructor(\n    private ruta: ActivatedRoute,\n    private materiaServicio: MateriaServicio,\n    private autenticacionServicio: AutenticacionServicio,\n    private inscripcionServicio: InscripcionServicio\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioActualId = this.autenticacionServicio.obtenerUsuarioActualId();\n    this.esEstudiante = this.autenticacionServicio.esEstudiante();\n    this.esProfesor = this.autenticacionServicio.esProfesor && this.autenticacionServicio.esProfesor();\n    this.ruta.params.subscribe(params => {\n      const id = params['id'];\n      if (id && !isNaN(Number(id))) {\n        const materiaId = Number(id);\n        this.cargarMateria(materiaId);\n        if (!this.esEstudiante) {\n          this.cargarEstudiantes(materiaId);\n        } else if (this.usuarioActualId) {\n          this.cargarCompaneros(materiaId, this.usuarioActualId);\n        }\n      } else {\n        this.error = 'ID de materia inválido';\n      }\n    });\n  }\n\n  cargarMateria(id: number): void {\n    if (!id || isNaN(id)) {\n      this.error = 'ID de materia inválido';\n      return;\n    }\n    this.cargando = true;\n    this.materiaServicio.obtenerMateria(id).subscribe({\n      next: (data) => {\n        this.materia = data;\n        this.cargando = false;\n      },\n      error: (err) => {\n        this.error = 'Error al cargar datos de la materia';\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n\n  cargarEstudiantes(materiaId: number): void {\n    if (!materiaId || isNaN(materiaId)) {\n      this.error = 'ID de materia inválido';\n      return;\n    }\n    this.cargando = true;\n    this.materiaServicio.obtenerEstudiantesPorMateria(materiaId, this.esProfesor).subscribe({\n      next: (data) => {\n        this.estudiantes = data;\n        this.cargando = false;\n      },\n      error: (err) => {\n        if (err.message === 'NO_PERMISOS') {\n          this.error = 'No tienes permisos para ver los estudiantes de esta materia.';\n        } else if (err.message === 'NO_ENCONTRADO') {\n          this.error = 'Materia no encontrada.';\n        } else {\n          this.error = 'Error al cargar estudiantes de la materia';\n        }\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n\n  cargarCompaneros(materiaId: number, estudianteId: number): void {\n    if (!materiaId || isNaN(materiaId) || !estudianteId || isNaN(estudianteId)) {\n      this.error = 'ID de materia o estudiante inválido';\n      return;\n    }\n    this.cargando = true;\n    this.inscripcionServicio.obtenerCompaneros(materiaId, estudianteId).subscribe({\n      next: (data) => {\n        this.companeros = data;\n        this.cargando = false;\n      },\n      error: (err) => {\n        this.error = 'Error al cargar compañeros de clase';\n        this.cargando = false;\n        console.error(err);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}