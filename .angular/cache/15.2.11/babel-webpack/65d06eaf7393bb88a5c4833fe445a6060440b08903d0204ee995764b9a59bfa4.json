{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../servicios/profesor.servicio\";\nimport * as i3 from \"@angular/router\";\nfunction FormularioProfesorComponente_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction FormularioProfesorComponente_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioProfesorComponente_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, FormularioProfesorComponente_div_15_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.profesorForm.get(\"nombre\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction FormularioProfesorComponente_div_20_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El apellido es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioProfesorComponente_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, FormularioProfesorComponente_div_20_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.profesorForm.get(\"apellido\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction FormularioProfesorComponente_div_25_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El correo electr\\u00F3nico es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioProfesorComponente_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Ingrese un correo electr\\u00F3nico v\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioProfesorComponente_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, FormularioProfesorComponente_div_25_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵtemplate(2, FormularioProfesorComponente_div_25_div_2_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.profesorForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r3.profesorForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction FormularioProfesorComponente_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El departamento es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioProfesorComponente_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, FormularioProfesorComponente_div_30_div_1_Template, 2, 0, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r4.profesorForm.get(\"departamento\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction FormularioProfesorComponente_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 28);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class FormularioProfesorComponente {\n  constructor(formBuilder, profesorServicio, route, router) {\n    this.formBuilder = formBuilder;\n    this.profesorServicio = profesorServicio;\n    this.route = route;\n    this.router = router;\n    this.cargando = false;\n    this.error = null;\n    this.esEdicion = false;\n  }\n  ngOnInit() {\n    this.inicializarFormulario();\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.esEdicion = true;\n        this.profesorId = +params['id'];\n        this.cargarDatosProfesor(this.profesorId);\n      }\n    });\n  }\n  inicializarFormulario() {\n    this.profesorForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      apellido: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      departamento: ['', [Validators.required]]\n      // Campos eliminados por no ser necesarios\n      // especialidad: [''],\n      // telefono: [''],\n      // direccion: [''] \n    });\n  }\n\n  cargarDatosProfesor(id) {\n    this.cargando = true;\n    this.error = null;\n    this.profesorServicio.obtenerProfesor(id).subscribe({\n      next: profesor => {\n        this.profesorForm.patchValue({\n          nombre: profesor.nombre || '',\n          apellido: profesor.apellido || '',\n          email: profesor.email,\n          departamento: profesor.departamento || ''\n          // Campos eliminados por no ser necesarios\n          // especialidad: profesor.especialidad || '',\n          // telefono: profesor.telefono || '',\n          // direccion: profesor.direccion || ''\n        });\n\n        console.log('Formulario del profesor actualizado con los datos:', this.profesorForm.value);\n        this.cargando = false;\n      },\n      error: error => {\n        this.error = error.message || 'Error al cargar los datos del profesor';\n        this.cargando = false;\n      }\n    });\n  }\n  enviar() {\n    if (this.profesorForm.invalid) {\n      return;\n    }\n    this.cargando = true;\n    this.error = null;\n    // Solo incluir los campos necesarios para el backend\n    const datosProfesor = {\n      nombre: this.profesorForm.value.nombre,\n      email: this.profesorForm.value.email,\n      departamento: this.profesorForm.value.departamento,\n      materias: []\n    };\n    console.log('Datos del profesor a enviar:', datosProfesor);\n    // Comentado: ya no se utilizan estos campos adicionales\n    // const camposAdicionales = {\n    //   apellido: this.profesorForm.value.apellido,\n    //   especialidad: this.profesorForm.value.especialidad,\n    //   telefono: this.profesorForm.value.telefono,\n    //   direccion: this.profesorForm.value.direccion\n    // };\n    if (this.esEdicion && this.profesorId) {\n      this.profesorServicio.actualizarProfesor(this.profesorId, datosProfesor).subscribe({\n        next: () => {\n          this.cargando = false;\n          this.router.navigate(['/profesores']);\n        },\n        error: error => {\n          this.cargando = false;\n          this.error = error.message || 'Error al actualizar el profesor';\n        }\n      });\n    } else {\n      console.log('Creando un nuevo profesor:', datosProfesor);\n      this.profesorServicio.crearProfesor(datosProfesor).subscribe({\n        next: () => {\n          this.cargando = false;\n          this.router.navigate(['/profesores']);\n        },\n        error: error => {\n          this.cargando = false;\n          this.error = error.message || 'Error al crear el profesor';\n        }\n      });\n    }\n  }\n  cancelar() {\n    this.router.navigate(['/profesores']);\n  }\n  static {\n    this.ɵfac = function FormularioProfesorComponente_Factory(t) {\n      return new (t || FormularioProfesorComponente)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProfesorServicio), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FormularioProfesorComponente,\n      selectors: [[\"app-formulario-profesor\"]],\n      decls: 37,\n      vars: 22,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"for\", \"nombre\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"nombre\", \"formControlName\", \"nombre\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"apellido\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"apellido\", \"formControlName\", \"apellido\", 1, \"form-control\", 3, \"ngClass\"], [1, \"mb-3\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"departamento\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"departamento\", \"formControlName\", \"departamento\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-flex\", \"justify-content-end\", \"gap-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function FormularioProfesorComponente_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, FormularioProfesorComponente_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementStart(9, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function FormularioProfesorComponente_Template_form_ngSubmit_9_listener() {\n            return ctx.enviar();\n          });\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"div\", 10)(12, \"label\", 11);\n          i0.ɵɵtext(13, \"Nombre\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 12);\n          i0.ɵɵtemplate(15, FormularioProfesorComponente_div_15_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 14);\n          i0.ɵɵtext(18, \"Apellido\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 15);\n          i0.ɵɵtemplate(20, FormularioProfesorComponente_div_20_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(21, \"div\", 16)(22, \"label\", 17);\n          i0.ɵɵtext(23, \"Correo Electr\\u00F3nico\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(24, \"input\", 18);\n          i0.ɵɵtemplate(25, FormularioProfesorComponente_div_25_Template, 3, 2, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 16)(27, \"label\", 19);\n          i0.ɵɵtext(28, \"Departamento\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(29, \"input\", 20);\n          i0.ɵɵtemplate(30, FormularioProfesorComponente_div_30_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"div\", 21)(32, \"button\", 22);\n          i0.ɵɵlistener(\"click\", function FormularioProfesorComponente_Template_button_click_32_listener() {\n            return ctx.cancelar();\n          });\n          i0.ɵɵtext(33, \" Cancelar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(34, \"button\", 23);\n          i0.ɵɵtemplate(35, FormularioProfesorComponente_span_35_Template, 1, 0, \"span\", 24);\n          i0.ɵɵtext(36);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\"\", ctx.esEdicion ? \"Editar\" : \"Agregar\", \" Profesor\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.profesorForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ((tmp_3_0 = ctx.profesorForm.get(\"nombre\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.profesorForm.get(\"nombre\")) == null ? null : tmp_3_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.profesorForm.get(\"nombre\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.profesorForm.get(\"nombre\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ((tmp_5_0 = ctx.profesorForm.get(\"apellido\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.profesorForm.get(\"apellido\")) == null ? null : tmp_5_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx.profesorForm.get(\"apellido\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.profesorForm.get(\"apellido\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ((tmp_7_0 = ctx.profesorForm.get(\"email\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.profesorForm.get(\"email\")) == null ? null : tmp_7_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.profesorForm.get(\"email\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.profesorForm.get(\"email\")) == null ? null : tmp_8_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ((tmp_9_0 = ctx.profesorForm.get(\"departamento\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.profesorForm.get(\"departamento\")) == null ? null : tmp_9_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_10_0 = ctx.profesorForm.get(\"departamento\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.profesorForm.get(\"departamento\")) == null ? null : tmp_10_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"disabled\", ctx.profesorForm.invalid || ctx.cargando);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.cargando);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.esEdicion ? \"Actualizar\" : \"Guardar\", \" \");\n        }\n      },\n      styles: [\".card[_ngcontent-%COMP%] {\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #007bff !important;\\n}\\n\\n.form-control[_ngcontent-%COMP%]:focus {\\n  border-color: #80bdff;\\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvcHJvZmVzb3Jlcy9mb3JtdWxhcmlvLXByb2Zlc29yL2Zvcm11bGFyaW8tcHJvZmVzb3IuY29tcG9uZW50ZS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3Q0FBd0M7QUFDMUM7O0FBRUE7RUFDRSxvQ0FBb0M7QUFDdEM7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsZ0RBQWdEO0FBQ2xEIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xufVxuXG4uY2FyZC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmICFpbXBvcnRhbnQ7XG59XG5cbi5mb3JtLWNvbnRyb2w6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICM4MGJkZmY7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDAsIDEyMywgMjU1LCAwLjI1KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","FormularioProfesorComponente","constructor","formBuilder","profesorServicio","route","router","ngOnInit","inicializarFormulario","params","subscribe","esEdicion","profesorId","cargarDatosProfesor","profesorForm","group","nombre","required","apellido","email","departamento","id","cargando","error","obtenerProfesor","next","profesor","patchValue","console","log","value","message","enviar","invalid","datosProfesor","materias","actualizarProfesor","navigate","crearProfesor","cancelar","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\componentes\\profesores\\formulario-profesor\\formulario-profesor.componente.ts","C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\componentes\\profesores\\formulario-profesor\\formulario-profesor.componente.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Profesor } from '../../../modelos/profesor.modelo';\nimport { ProfesorServicio } from '../../../servicios/profesor.servicio';\n\n@Component({\n  selector: 'app-formulario-profesor',\n  templateUrl: './formulario-profesor.componente.html',\n  styleUrls: ['./formulario-profesor.componente.css']\n})\nexport class FormularioProfesorComponente implements OnInit {\n  profesorForm!: FormGroup;\n  cargando = false;\n  error: string | null = null;\n  esEdicion = false;\n  profesorId?: number;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private profesorServicio: ProfesorServicio,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.inicializarFormulario();\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.esEdicion = true;\n        this.profesorId = +params['id'];\n        this.cargarDatosProfesor(this.profesorId);\n      }\n    });\n  }\n\n  private inicializarFormulario(): void {\n    this.profesorForm = this.formBuilder.group({\n      nombre: ['', [Validators.required]],\n      apellido: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      departamento: ['', [Validators.required]]\n      // Campos eliminados por no ser necesarios\n      // especialidad: [''],\n      // telefono: [''],\n      // direccion: [''] \n    });\n  }\n\n  private cargarDatosProfesor(id: number): void {\n    this.cargando = true;\n    this.error = null;\n    this.profesorServicio.obtenerProfesor(id).subscribe({\n      next: (profesor) => {\n        this.profesorForm.patchValue({\n          nombre: profesor.nombre || '',\n          apellido: profesor.apellido || '',\n          email: profesor.email,\n          departamento: profesor.departamento || ''\n          // Campos eliminados por no ser necesarios\n          // especialidad: profesor.especialidad || '',\n          // telefono: profesor.telefono || '',\n          // direccion: profesor.direccion || ''\n        });\n        console.log('Formulario del profesor actualizado con los datos:', this.profesorForm.value);\n        this.cargando = false;\n      },\n      error: (error) => {\n        this.error = error.message || 'Error al cargar los datos del profesor';\n        this.cargando = false;\n      }\n    });\n  }\n\n  enviar(): void {\n    if (this.profesorForm.invalid) {\n      return;\n    }\n    this.cargando = true;\n    this.error = null;\n    \n    // Solo incluir los campos necesarios para el backend\n    const datosProfesor: Profesor = {\n      nombre: this.profesorForm.value.nombre,\n      email: this.profesorForm.value.email,\n      departamento: this.profesorForm.value.departamento,\n      materias: []\n    };\n    console.log('Datos del profesor a enviar:', datosProfesor);\n    // Comentado: ya no se utilizan estos campos adicionales\n    // const camposAdicionales = {\n    //   apellido: this.profesorForm.value.apellido,\n    //   especialidad: this.profesorForm.value.especialidad,\n    //   telefono: this.profesorForm.value.telefono,\n    //   direccion: this.profesorForm.value.direccion\n    // };\n    \n    if (this.esEdicion && this.profesorId) {\n      this.profesorServicio.actualizarProfesor(this.profesorId, datosProfesor).subscribe({\n        next: () => {\n          this.cargando = false;\n          this.router.navigate(['/profesores']);\n        },\n        error: (error) => {\n          this.cargando = false;\n          this.error = error.message || 'Error al actualizar el profesor';\n        }\n      });\n    } else {\n      console.log('Creando un nuevo profesor:', datosProfesor);\n      this.profesorServicio.crearProfesor(datosProfesor).subscribe({\n        next: () => {\n          this.cargando = false;\n          this.router.navigate(['/profesores']);\n        },\n        error: (error) => {\n          this.cargando = false;\n          this.error = error.message || 'Error al crear el profesor';\n        }\n      });\n    }\n  }\n\n  cancelar(): void {\n    this.router.navigate(['/profesores']);\n  }\n}","<div class=\"container mt-4\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card\">\n        <div class=\"card-header bg-primary text-white\">\n          <h4 class=\"mb-0\">{{ esEdicion ? 'Editar' : 'Agregar' }} Profesor</h4>\n        </div>\n        <div class=\"card-body\">\n          <div *ngIf=\"error\" class=\"alert alert-danger\">\n            {{ error }}\n          </div>\n\n          <form [formGroup]=\"profesorForm\" (ngSubmit)=\"enviar()\">\n            <div class=\"row mb-3\">\n              <div class=\"col-md-6\">\n                <label for=\"nombre\" class=\"form-label\">Nombre</label>\n                <input \n                  type=\"text\" \n                  id=\"nombre\" \n                  formControlName=\"nombre\" \n                  class=\"form-control\" \n                  [ngClass]=\"{'is-invalid': profesorForm.get('nombre')?.invalid && profesorForm.get('nombre')?.touched}\"\n                >\n                <div *ngIf=\"profesorForm.get('nombre')?.invalid && profesorForm.get('nombre')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"profesorForm.get('nombre')?.errors?.['required']\">El nombre es obligatorio</div>\n                </div>\n              </div>\n              <div class=\"col-md-6\">\n                <label for=\"apellido\" class=\"form-label\">Apellido</label>\n                <input \n                  type=\"text\" \n                  id=\"apellido\" \n                  formControlName=\"apellido\" \n                  class=\"form-control\" \n                  [ngClass]=\"{'is-invalid': profesorForm.get('apellido')?.invalid && profesorForm.get('apellido')?.touched}\"\n                >\n                <div *ngIf=\"profesorForm.get('apellido')?.invalid && profesorForm.get('apellido')?.touched\" class=\"invalid-feedback\">\n                  <div *ngIf=\"profesorForm.get('apellido')?.errors?.['required']\">El apellido es obligatorio</div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Correo Electrónico</label>\n              <input \n                type=\"email\" \n                id=\"email\" \n                formControlName=\"email\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': profesorForm.get('email')?.invalid && profesorForm.get('email')?.touched}\"\n              >\n              <div *ngIf=\"profesorForm.get('email')?.invalid && profesorForm.get('email')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"profesorForm.get('email')?.errors?.['required']\">El correo electrónico es obligatorio</div>\n                <div *ngIf=\"profesorForm.get('email')?.errors?.['email']\">Ingrese un correo electrónico válido</div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"departamento\" class=\"form-label\">Departamento</label>\n              <input \n                type=\"text\" \n                id=\"departamento\" \n                formControlName=\"departamento\" \n                class=\"form-control\"\n                [ngClass]=\"{'is-invalid': profesorForm.get('departamento')?.invalid && profesorForm.get('departamento')?.touched}\"\n              >\n              <div *ngIf=\"profesorForm.get('departamento')?.invalid && profesorForm.get('departamento')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"profesorForm.get('departamento')?.errors?.['required']\">El departamento es obligatorio</div>\n              </div>\n            </div>\n\n            <!-- Campos eliminados por no ser necesarios\n            <div class=\"mb-3\">\n              <label for=\"especialidad\" class=\"form-label\">Especialidad</label>\n              <input \n                type=\"text\" \n                id=\"especialidad\" \n                formControlName=\"especialidad\" \n                class=\"form-control\"\n              >\n            </div>\n\n            <div class=\"row mb-3\">\n              <div class=\"col-md-6\">\n                <label for=\"telefono\" class=\"form-label\">Teléfono</label>\n                <input \n                  type=\"text\" \n                  id=\"telefono\" \n                  formControlName=\"telefono\" \n                  class=\"form-control\"\n                >\n              </div>\n              <div class=\"col-md-6\">\n                <label for=\"direccion\" class=\"form-label\">Dirección</label>\n                <input \n                  type=\"text\" \n                  id=\"direccion\" \n                  formControlName=\"direccion\" \n                  class=\"form-control\"\n                >\n              </div>\n            </div>\n            -->\n\n            <div class=\"d-flex justify-content-end gap-2\">\n              <button \n                type=\"button\" \n                class=\"btn btn-secondary\" \n                (click)=\"cancelar()\"\n              >\n                Cancelar\n              </button>\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\" \n                [disabled]=\"profesorForm.invalid || cargando\"\n              >\n                <span *ngIf=\"cargando\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                {{ esEdicion ? 'Actualizar' : 'Guardar' }}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}