{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.error, \" \");\n  }\n}\nfunction RegisterComponent_div_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El nombre es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_14_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.registerForm.get(\"name\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El correo electr\\u00F3nico es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Ingrese un correo electr\\u00F3nico v\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_19_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, RegisterComponent_div_19_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r2.registerForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r2.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction RegisterComponent_div_30_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El rol es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_30_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r3.registerForm.get(\"role\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_31_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El ID de estudiante es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_31_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_31_div_4_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r13.registerForm.get(\"studentId\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nfunction RegisterComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 33);\n    i0.ɵɵtext(2, \"ID de Estudiante\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 34);\n    i0.ɵɵtemplate(4, RegisterComponent_div_31_div_4_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ((tmp_0_0 = ctx_r4.registerForm.get(\"studentId\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r4.registerForm.get(\"studentId\")) == null ? null : tmp_0_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r4.registerForm.get(\"studentId\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r4.registerForm.get(\"studentId\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction RegisterComponent_div_32_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"El ID de profesor es obligatorio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_32_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_32_div_4_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext(2);\n    let tmp_0_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r15.registerForm.get(\"professorId\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n  }\n}\nfunction RegisterComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"label\", 35);\n    i0.ɵɵtext(2, \"ID de Profesor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 36);\n    i0.ɵɵtemplate(4, RegisterComponent_div_32_div_4_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ((tmp_0_0 = ctx_r5.registerForm.get(\"professorId\")) == null ? null : tmp_0_0.invalid) && ((tmp_0_0 = ctx_r5.registerForm.get(\"professorId\")) == null ? null : tmp_0_0.touched)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r5.registerForm.get(\"professorId\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx_r5.registerForm.get(\"professorId\")) == null ? null : tmp_1_0.touched));\n  }\n}\nfunction RegisterComponent_div_37_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"La contrase\\u00F1a es obligatoria\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"La contrase\\u00F1a debe tener al menos 6 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_37_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, RegisterComponent_div_37_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r6.registerForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r6.registerForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nfunction RegisterComponent_div_42_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Confirme su contrase\\u00F1a\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_42_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Las contrase\\u00F1as no coinciden\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtemplate(1, RegisterComponent_div_42_div_1_Template, 2, 0, \"div\", 32);\n    i0.ɵɵtemplate(2, RegisterComponent_div_42_div_2_Template, 2, 0, \"div\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r7.registerForm.get(\"confirmPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r7.registerForm.get(\"confirmPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"passwordMismatch\"]);\n  }\n}\nfunction RegisterComponent_span_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 37);\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.isLoading = false;\n    this.error = null;\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      studentId: [''],\n      professorId: [''],\n      role: ['student', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n    // Mostrar/ocultar campo studentId según el rol seleccionado\n    this.registerForm.get('role')?.valueChanges.subscribe(role => {\n      if (role === 'student') {\n        this.registerForm.get('studentId')?.setValidators([Validators.required]);\n        this.registerForm.get('professorId')?.clearValidators();\n      } else if (role === 'professor') {\n        this.registerForm.get('professorId')?.setValidators([Validators.required]);\n        this.registerForm.get('studentId')?.clearValidators();\n      } else {\n        this.registerForm.get('studentId')?.clearValidators();\n        this.registerForm.get('professorId')?.clearValidators();\n      }\n      this.registerForm.get('studentId')?.updateValueAndValidity();\n      this.registerForm.get('professorId')?.updateValueAndValidity();\n    });\n  }\n  passwordMatchValidator(form) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    if (password !== confirmPassword) {\n      form.get('confirmPassword')?.setErrors({\n        passwordMismatch: true\n      });\n      return {\n        passwordMismatch: true\n      };\n    } else {\n      form.get('confirmPassword')?.setErrors(null);\n      return null;\n    }\n  }\n  onSubmit() {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.isLoading = true;\n    this.error = null;\n    const registerData = {\n      name: this.registerForm.value.name,\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password,\n      role: this.registerForm.value.role\n    };\n    // Agregar studentId solo si el rol es estudiante y hay un valor\n    if (this.registerForm.value.role === 'student' && this.registerForm.value.studentId) {\n      registerData.studentId = parseInt(this.registerForm.value.studentId, 10);\n    }\n    // Agregar professorId solo si el rol es profesor y hay un valor\n    if (this.registerForm.value.role === 'professor' && this.registerForm.value.professorId) {\n      registerData.professorId = parseInt(this.registerForm.value.professorId, 10);\n    }\n    this.authService.register(registerData).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.router.navigate(['/students']);\n      },\n      error: errorMessage => {\n        this.isLoading = false;\n        this.error = errorMessage;\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 52,\n      vars: 26,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"bg-primary\", \"text-white\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"email\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"role\", 1, \"form-label\"], [\"id\", \"role\", \"formControlName\", \"role\", 1, \"form-select\", 3, \"ngClass\"], [\"value\", \"student\"], [\"value\", \"professor\"], [\"value\", \"admin\"], [\"class\", \"mb-3\", 4, \"ngIf\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-2\", \"role\", \"status\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/login\"], [1, \"alert\", \"alert-danger\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"studentId\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"studentId\", \"formControlName\", \"studentId\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"professorId\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"professorId\", \"formControlName\", \"professorId\", 1, \"form-control\", 3, \"ngClass\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\", \"me-2\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Registro de Usuario\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6);\n          i0.ɵɵtemplate(8, RegisterComponent_div_8_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementStart(9, \"form\", 8);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 10);\n          i0.ɵɵtext(12, \"Nombre Completo\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 11);\n          i0.ɵɵtemplate(14, RegisterComponent_div_14_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 9)(16, \"label\", 13);\n          i0.ɵɵtext(17, \"Correo Electr\\u00F3nico\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"input\", 14);\n          i0.ɵɵtemplate(19, RegisterComponent_div_19_Template, 3, 2, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 9)(21, \"label\", 15);\n          i0.ɵɵtext(22, \"Rol\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"select\", 16)(24, \"option\", 17);\n          i0.ɵɵtext(25, \"Estudiante\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 18);\n          i0.ɵɵtext(27, \"Profesor\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"option\", 19);\n          i0.ɵɵtext(29, \"Administrador\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(30, RegisterComponent_div_30_Template, 2, 1, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(31, RegisterComponent_div_31_Template, 5, 4, \"div\", 20);\n          i0.ɵɵtemplate(32, RegisterComponent_div_32_Template, 5, 4, \"div\", 20);\n          i0.ɵɵelementStart(33, \"div\", 9)(34, \"label\", 21);\n          i0.ɵɵtext(35, \"Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(36, \"input\", 22);\n          i0.ɵɵtemplate(37, RegisterComponent_div_37_Template, 3, 2, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 9)(39, \"label\", 23);\n          i0.ɵɵtext(40, \"Confirmar Contrase\\u00F1a\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"input\", 24);\n          i0.ɵɵtemplate(42, RegisterComponent_div_42_Template, 3, 2, \"div\", 12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"div\", 25)(44, \"button\", 26);\n          i0.ɵɵtemplate(45, RegisterComponent_span_45_Template, 1, 0, \"span\", 27);\n          i0.ɵɵtext(46, \" Registrarse \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(47, \"div\", 28)(48, \"p\");\n          i0.ɵɵtext(49, \"\\u00BFYa tienes una cuenta? \");\n          i0.ɵɵelementStart(50, \"a\", 29);\n          i0.ɵɵtext(51, \"Inicia sesi\\u00F3n aqu\\u00ED\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          let tmp_12_0;\n          let tmp_13_0;\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ((tmp_2_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_2_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.registerForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ((tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_4_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ((tmp_6_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_6_0.touched)));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_8_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_8_0.value) === \"student\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.registerForm.get(\"role\")) == null ? null : tmp_9_0.value) === \"professor\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ((tmp_10_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_10_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx.registerForm.get(\"password\")) == null ? null : tmp_11_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c0, ((tmp_12_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_12_0.touched)));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_13_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.invalid) && ((tmp_13_0 = ctx.registerForm.get(\"confirmPassword\")) == null ? null : tmp_13_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".card[_ngcontent-%COMP%] {\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\n.card-header[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.form-label[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n}\\n\\n.invalid-feedback[_ngcontent-%COMP%] {\\n  font-size: 80%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsOEJBQThCO0FBQzlCO0VBQ0Usd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsY0FBYztBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIFJlZ2lzdGVyIENvbXBvbmVudCBTdHlsZXMgKi9cbi5jYXJkIHtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLmNhcmQtaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmZvcm0tbGFiZWwge1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG4uaW52YWxpZC1mZWVkYmFjayB7XG4gIGZvbnQtc2l6ZTogODAlO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","RegisterComponent","constructor","formBuilder","authService","router","ngOnInit","registerForm","group","name","required","email","password","minLength","confirmPassword","studentId","professorId","role","validators","passwordMatchValidator","get","valueChanges","subscribe","setValidators","clearValidators","updateValueAndValidity","form","value","setErrors","passwordMismatch","onSubmit","invalid","isLoading","error","registerData","parseInt","register","next","navigate","errorMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\Prueba interrapidisimp\\frontend\\src\\app\\components\\auth\\register.component.ts","C:\\Users\\hansk\\Videos\\Prueba interrapidisimp\\frontend\\src\\app\\components\\auth\\register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { RegisterRequest } from '../../models/auth.model';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  isLoading = false;\n  error: string | null = null;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]],\n      studentId: [''],\n      professorId: [''],\n      role: ['student', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n\n    // Mostrar/ocultar campo studentId según el rol seleccionado\n    this.registerForm.get('role')?.valueChanges.subscribe(role => {\n      if (role === 'student') {\n        this.registerForm.get('studentId')?.setValidators([Validators.required]);\n        this.registerForm.get('professorId')?.clearValidators();\n      } else if (role === 'professor') {\n        this.registerForm.get('professorId')?.setValidators([Validators.required]);\n        this.registerForm.get('studentId')?.clearValidators();\n      } else {\n        this.registerForm.get('studentId')?.clearValidators();\n        this.registerForm.get('professorId')?.clearValidators();\n      }\n      this.registerForm.get('studentId')?.updateValueAndValidity();\n      this.registerForm.get('professorId')?.updateValueAndValidity();\n    });\n  }\n\n  passwordMatchValidator(form: FormGroup) {\n    const password = form.get('password')?.value;\n    const confirmPassword = form.get('confirmPassword')?.value;\n    \n    if (password !== confirmPassword) {\n      form.get('confirmPassword')?.setErrors({ passwordMismatch: true });\n      return { passwordMismatch: true };\n    } else {\n      form.get('confirmPassword')?.setErrors(null);\n      return null;\n    }\n  }\n\n  onSubmit(): void {\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.isLoading = true;\n    this.error = null;\n\n    const registerData: RegisterRequest = {\n      name: this.registerForm.value.name,\n      email: this.registerForm.value.email,\n      password: this.registerForm.value.password,\n      role: this.registerForm.value.role\n    };\n\n    // Agregar studentId solo si el rol es estudiante y hay un valor\n    if (this.registerForm.value.role === 'student' && this.registerForm.value.studentId) {\n      registerData.studentId = parseInt(this.registerForm.value.studentId, 10);\n    }\n\n    // Agregar professorId solo si el rol es profesor y hay un valor\n    if (this.registerForm.value.role === 'professor' && this.registerForm.value.professorId) {\n      registerData.professorId = parseInt(this.registerForm.value.professorId, 10);\n    }\n\n    this.authService.register(registerData).subscribe({\n      next: () => {\n        this.isLoading = false;\n        this.router.navigate(['/students']);\n      },\n      error: (errorMessage) => {\n        this.isLoading = false;\n        this.error = errorMessage;\n      }\n    });\n  }\n}","<div class=\"container mt-5\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-6\">\n      <div class=\"card\">\n        <div class=\"card-header bg-primary text-white\">\n          <h4 class=\"mb-0\">Registro de Usuario</h4>\n        </div>\n        <div class=\"card-body\">\n          <div *ngIf=\"error\" class=\"alert alert-danger\">\n            {{ error }}\n          </div>\n          \n          <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n              <label for=\"name\" class=\"form-label\">Nombre Completo</label>\n              <input \n                type=\"text\" \n                id=\"name\" \n                formControlName=\"name\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('name')?.invalid && registerForm.get('name')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('name')?.invalid && registerForm.get('name')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('name')?.errors?.['required']\">El nombre es obligatorio</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"email\" class=\"form-label\">Correo Electrónico</label>\n              <input \n                type=\"email\" \n                id=\"email\" \n                formControlName=\"email\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('email')?.invalid && registerForm.get('email')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('email')?.errors?.['required']\">El correo electrónico es obligatorio</div>\n                <div *ngIf=\"registerForm.get('email')?.errors?.['email']\">Ingrese un correo electrónico válido</div>\n              </div>\n            </div>\n\n            <div class=\"mb-3\">\n              <label for=\"role\" class=\"form-label\">Rol</label>\n              <select \n                id=\"role\" \n                formControlName=\"role\" \n                class=\"form-select\" \n                [ngClass]=\"{'is-invalid': registerForm.get('role')?.invalid && registerForm.get('role')?.touched}\"\n              >\n                <option value=\"student\">Estudiante</option>\n                <option value=\"professor\">Profesor</option>\n                <option value=\"admin\">Administrador</option>\n              </select>\n              <div *ngIf=\"registerForm.get('role')?.invalid && registerForm.get('role')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('role')?.errors?.['required']\">El rol es obligatorio</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\" *ngIf=\"registerForm.get('role')?.value === 'student'\">\n              <label for=\"studentId\" class=\"form-label\">ID de Estudiante</label>\n              <input \n                type=\"number\" \n                id=\"studentId\" \n                formControlName=\"studentId\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('studentId')?.invalid && registerForm.get('studentId')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('studentId')?.invalid && registerForm.get('studentId')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('studentId')?.errors?.['required']\">El ID de estudiante es obligatorio</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\" *ngIf=\"registerForm.get('role')?.value === 'professor'\">\n              <label for=\"professorId\" class=\"form-label\">ID de Profesor</label>\n              <input \n                type=\"number\" \n                id=\"professorId\" \n                formControlName=\"professorId\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('professorId')?.invalid && registerForm.get('professorId')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('professorId')?.invalid && registerForm.get('professorId')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('professorId')?.errors?.['required']\">El ID de profesor es obligatorio</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"password\" class=\"form-label\">Contraseña</label>\n              <input \n                type=\"password\" \n                id=\"password\" \n                formControlName=\"password\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('password')?.invalid && registerForm.get('password')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('password')?.invalid && registerForm.get('password')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('password')?.errors?.['required']\">La contraseña es obligatoria</div>\n                <div *ngIf=\"registerForm.get('password')?.errors?.['minlength']\">La contraseña debe tener al menos 6 caracteres</div>\n              </div>\n            </div>\n            \n            <div class=\"mb-3\">\n              <label for=\"confirmPassword\" class=\"form-label\">Confirmar Contraseña</label>\n              <input \n                type=\"password\" \n                id=\"confirmPassword\" \n                formControlName=\"confirmPassword\" \n                class=\"form-control\" \n                [ngClass]=\"{'is-invalid': registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched}\"\n              >\n              <div *ngIf=\"registerForm.get('confirmPassword')?.invalid && registerForm.get('confirmPassword')?.touched\" class=\"invalid-feedback\">\n                <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['required']\">Confirme su contraseña</div>\n                <div *ngIf=\"registerForm.get('confirmPassword')?.errors?.['passwordMismatch']\">Las contraseñas no coinciden</div>\n              </div>\n            </div>\n            \n            <div class=\"d-grid gap-2\">\n              <button \n                type=\"submit\" \n                class=\"btn btn-primary\" \n                [disabled]=\"registerForm.invalid || isLoading\"\n              >\n                <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                Registrarse\n              </button>\n            </div>\n          </form>\n          \n          <div class=\"mt-3 text-center\">\n            <p>¿Ya tienes una cuenta? <a routerLink=\"/login\">Inicia sesión aquí</a></p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}