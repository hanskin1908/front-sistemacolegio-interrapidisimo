{"ast":null,"code":"\"use strict\";\n\n// COMPONENTE COMENTADO POR MIGRACIÓN A ESPAÑOL\n/*\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Subject } from '../../models/subject.model';\r\nimport { SubjectService } from '../../services/subject.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { RegistrationService } from '../../services/registration.service';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject-list.component.css']\r\n})\r\nexport class SubjectListComponent implements OnInit {\r\n  subjects: Subject[] = [];\r\n  loading = false;\r\n  error = '';\r\n  isStudent = false;\r\n  isAdmin = false;\r\n  isProfessor = false;\r\n\r\n  constructor(\r\n    private subjectService: SubjectService,\r\n    private authService: AuthService,\r\n    private registrationService: RegistrationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isStudent = this.authService.isStudent();\r\n    this.isAdmin = this.authService.isAdmin();\r\n    this.isProfessor = this.authService.isProfessor && this.authService.isProfessor();\r\n    this.loadSubjects();\r\n  }\r\n\r\n  loadSubjects(): void {\r\n    this.loading = true;\r\n\r\n    if (this.isStudent) {\r\n      const currentUserId = this.authService.getCurrentUserId();\r\n      if (currentUserId) {\r\n        this.subjectService.getStudentSubjects(currentUserId).subscribe({\r\n          next: (data) => {\r\n            this.subjects = data;\r\n            this.loading = false;\r\n          },\r\n          error: (err) => {\r\n            this.error = 'Error al cargar materias registradas';\r\n            this.loading = false;\r\n            console.error(err);\r\n          }\r\n        });\r\n      } else {\r\n        this.loading = false;\r\n        this.error = 'No se pudo identificar al estudiante';\r\n      }\r\n    } else if (this.isProfessor) {\r\n      // Profesores usan el endpoint seguro\r\n      this.subjectService.getSubjects(true).subscribe({\r\n        next: (data) => {\r\n          this.subjects = data;\r\n          this.loading = false;\r\n        },\r\n        error: (err) => {\r\n          this.error = 'Error al cargar materias del profesor';\r\n          this.loading = false;\r\n          console.error(err);\r\n        }\r\n      });\r\n    } else {\r\n      // Admin y otros roles\r\n      this.subjectService.getSubjects().subscribe({\r\n        next: (data) => {\r\n          this.subjects = data;\r\n          this.loading = false;\r\n        },\r\n        error: (err) => {\r\n          this.error = 'Error al cargar materias';\r\n          this.loading = false;\r\n          console.error(err);\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n*/","map":{"version":3,"mappings":";;AAAA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\components\\subject-list\\subject-list.component.ts"],"sourcesContent":["// COMPONENTE COMENTADO POR MIGRACIÓN A ESPAÑOL\n/*\nimport { Component, OnInit } from '@angular/core';\nimport { Subject } from '../../models/subject.model';\nimport { SubjectService } from '../../services/subject.service';\nimport { AuthService } from '../../services/auth.service';\nimport { RegistrationService } from '../../services/registration.service';\nimport { forkJoin, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.css']\n})\nexport class SubjectListComponent implements OnInit {\n  subjects: Subject[] = [];\n  loading = false;\n  error = '';\n  isStudent = false;\n  isAdmin = false;\n  isProfessor = false;\n\n  constructor(\n    private subjectService: SubjectService,\n    private authService: AuthService,\n    private registrationService: RegistrationService\n  ) { }\n\n  ngOnInit(): void {\n    this.isStudent = this.authService.isStudent();\n    this.isAdmin = this.authService.isAdmin();\n    this.isProfessor = this.authService.isProfessor && this.authService.isProfessor();\n    this.loadSubjects();\n  }\n\n  loadSubjects(): void {\n    this.loading = true;\n\n    if (this.isStudent) {\n      const currentUserId = this.authService.getCurrentUserId();\n      if (currentUserId) {\n        this.subjectService.getStudentSubjects(currentUserId).subscribe({\n          next: (data) => {\n            this.subjects = data;\n            this.loading = false;\n          },\n          error: (err) => {\n            this.error = 'Error al cargar materias registradas';\n            this.loading = false;\n            console.error(err);\n          }\n        });\n      } else {\n        this.loading = false;\n        this.error = 'No se pudo identificar al estudiante';\n      }\n    } else if (this.isProfessor) {\n      // Profesores usan el endpoint seguro\n      this.subjectService.getSubjects(true).subscribe({\n        next: (data) => {\n          this.subjects = data;\n          this.loading = false;\n        },\n        error: (err) => {\n          this.error = 'Error al cargar materias del profesor';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    } else {\n      // Admin y otros roles\n      this.subjectService.getSubjects().subscribe({\n        next: (data) => {\n          this.subjects = data;\n          this.loading = false;\n        },\n        error: (err) => {\n          this.error = 'Error al cargar materias';\n          this.loading = false;\n          console.error(err);\n        }\n      });\n    }\n  }\n}\n*/"]},"metadata":{},"sourceType":"script","externalDependencies":[]}