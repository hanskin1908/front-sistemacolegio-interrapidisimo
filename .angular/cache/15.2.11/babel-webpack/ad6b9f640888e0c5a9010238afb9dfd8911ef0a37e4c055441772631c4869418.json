{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ListaMateriasComponente = class ListaMateriasComponente {\n  constructor(materiaServicio, autenticacionServicio, inscripcionServicio) {\n    this.materiaServicio = materiaServicio;\n    this.autenticacionServicio = autenticacionServicio;\n    this.inscripcionServicio = inscripcionServicio;\n    this.materias = [];\n    this.cargando = false;\n    this.error = '';\n    this.esEstudiante = false;\n    this.esAdmin = false;\n    this.esProfesor = false;\n  }\n  ngOnInit() {\n    this.esEstudiante = this.autenticacionServicio.esEstudiante();\n    this.esAdmin = this.autenticacionServicio.esAdmin();\n    this.esProfesor = this.autenticacionServicio.esProfesor && this.autenticacionServicio.esProfesor();\n    this.cargarMaterias();\n  }\n  cargarMaterias() {\n    this.cargando = true;\n    if (this.esEstudiante) {\n      const usuarioId = this.autenticacionServicio.obtenerUsuarioActualId();\n      if (usuarioId) {\n        this.materiaServicio.obtenerMateriasEstudiante(usuarioId).subscribe({\n          next: datos => {\n            this.materias = datos;\n            this.cargando = false;\n          },\n          error: err => {\n            this.error = 'Error al cargar materias registradas';\n            this.cargando = false;\n            console.error(err);\n          }\n        });\n      } else {\n        this.cargando = false;\n        this.error = 'No se pudo identificar al estudiante';\n      }\n    } else if (this.esProfesor) {\n      this.materiaServicio.obtenerMaterias(true).subscribe({\n        next: datos => {\n          this.materias = datos;\n          this.cargando = false;\n        },\n        error: err => {\n          this.error = 'Error al cargar materias del profesor';\n          this.cargando = false;\n          console.error(err);\n        }\n      });\n    } else {\n      this.materiaServicio.obtenerMaterias().subscribe({\n        next: datos => {\n          this.materias = datos;\n          this.cargando = false;\n        },\n        error: err => {\n          this.error = 'Error al cargar materias';\n          this.cargando = false;\n          console.error(err);\n        }\n      });\n    }\n  }\n};\nListaMateriasComponente = __decorate([Component({\n  selector: 'app-lista-materias',\n  templateUrl: './lista-materias.componente.html',\n  styleUrls: ['./lista-materias.componente.css']\n})], ListaMateriasComponente);\nexport { ListaMateriasComponente };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAQlCC,YACUC,eAAgC,EAChCC,qBAA4C,EAC5CC,mBAAwC;IAFxC,oBAAe,GAAfF,eAAe;IACf,0BAAqB,GAArBC,qBAAqB;IACrB,wBAAmB,GAAnBC,mBAAmB;IAV7B,aAAQ,GAAc,EAAE;IACxB,aAAQ,GAAG,KAAK;IAChB,UAAK,GAAG,EAAE;IACV,iBAAY,GAAG,KAAK;IACpB,YAAO,GAAG,KAAK;IACf,eAAU,GAAG,KAAK;EAMd;EAEJC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,qBAAqB,CAACG,YAAY,EAAE;IAC7D,IAAI,CAACC,OAAO,GAAG,IAAI,CAACJ,qBAAqB,CAACI,OAAO,EAAE;IACnD,IAAI,CAACC,UAAU,GAAG,IAAI,CAACL,qBAAqB,CAACK,UAAU,IAAI,IAAI,CAACL,qBAAqB,CAACK,UAAU,EAAE;IAClG,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpB,IAAI,IAAI,CAACJ,YAAY,EAAE;MACrB,MAAMK,SAAS,GAAG,IAAI,CAACR,qBAAqB,CAACS,sBAAsB,EAAE;MACrE,IAAID,SAAS,EAAE;QACb,IAAI,CAACT,eAAe,CAACW,yBAAyB,CAACF,SAAS,CAAC,CAACG,SAAS,CAAC;UAClEC,IAAI,EAAGC,KAAK,IAAI;YACd,IAAI,CAACC,QAAQ,GAAGD,KAAK;YACrB,IAAI,CAACN,QAAQ,GAAG,KAAK;UACvB,CAAC;UACDQ,KAAK,EAAGC,GAAG,IAAI;YACb,IAAI,CAACD,KAAK,GAAG,sCAAsC;YACnD,IAAI,CAACR,QAAQ,GAAG,KAAK;YACrBU,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;UACpB;SACD,CAAC;OACH,MAAM;QACL,IAAI,CAACT,QAAQ,GAAG,KAAK;QACrB,IAAI,CAACQ,KAAK,GAAG,sCAAsC;;KAEtD,MAAM,IAAI,IAAI,CAACV,UAAU,EAAE;MAC1B,IAAI,CAACN,eAAe,CAACmB,eAAe,CAAC,IAAI,CAAC,CAACP,SAAS,CAAC;QACnDC,IAAI,EAAGC,KAAK,IAAI;UACd,IAAI,CAACC,QAAQ,GAAGD,KAAK;UACrB,IAAI,CAACN,QAAQ,GAAG,KAAK;QACvB,CAAC;QACDQ,KAAK,EAAGC,GAAG,IAAI;UACb,IAAI,CAACD,KAAK,GAAG,uCAAuC;UACpD,IAAI,CAACR,QAAQ,GAAG,KAAK;UACrBU,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;QACpB;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACjB,eAAe,CAACmB,eAAe,EAAE,CAACP,SAAS,CAAC;QAC/CC,IAAI,EAAGC,KAAK,IAAI;UACd,IAAI,CAACC,QAAQ,GAAGD,KAAK;UACrB,IAAI,CAACN,QAAQ,GAAG,KAAK;QACvB,CAAC;QACDQ,KAAK,EAAGC,GAAG,IAAI;UACb,IAAI,CAACD,KAAK,GAAG,0BAA0B;UACvC,IAAI,CAACR,QAAQ,GAAG,KAAK;UACrBU,OAAO,CAACF,KAAK,CAACC,GAAG,CAAC;QACpB;OACD,CAAC;;EAEN;CACD;AApEYnB,uBAAuB,eALnCD,SAAS,CAAC;EACTuB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWxB,uBAAuB,CAoEnC;SApEYA,uBAAuB","names":["Component","ListaMateriasComponente","constructor","materiaServicio","autenticacionServicio","inscripcionServicio","ngOnInit","esEstudiante","esAdmin","esProfesor","cargarMaterias","cargando","usuarioId","obtenerUsuarioActualId","obtenerMateriasEstudiante","subscribe","next","datos","materias","error","err","console","obtenerMaterias","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\hansk\\Videos\\frontendsistemacolegio.interrapidisi\\frontendsistemacolegio.interrapidisi\\src\\app\\componentes\\asignaturas\\lista-materias.componente.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Materia } from '../../modelos/materia.modelo';\nimport { MateriaServicio } from '../../servicios/materia.servicio';\nimport { AutenticacionServicio } from '../../servicios/autenticacion.servicio';\nimport { InscripcionServicio } from '../../servicios/inscripcion.servicio';\n\n@Component({\n  selector: 'app-lista-materias',\n  templateUrl: './lista-materias.componente.html',\n  styleUrls: ['./lista-materias.componente.css']\n})\nexport class ListaMateriasComponente implements OnInit {\n  materias: Materia[] = [];\n  cargando = false;\n  error = '';\n  esEstudiante = false;\n  esAdmin = false;\n  esProfesor = false;\n\n  constructor(\n    private materiaServicio: MateriaServicio,\n    private autenticacionServicio: AutenticacionServicio,\n    private inscripcionServicio: InscripcionServicio\n  ) { }\n\n  ngOnInit(): void {\n    this.esEstudiante = this.autenticacionServicio.esEstudiante();\n    this.esAdmin = this.autenticacionServicio.esAdmin();\n    this.esProfesor = this.autenticacionServicio.esProfesor && this.autenticacionServicio.esProfesor();\n    this.cargarMaterias();\n  }\n\n  cargarMaterias(): void {\n    this.cargando = true;\n\n    if (this.esEstudiante) {\n      const usuarioId = this.autenticacionServicio.obtenerUsuarioActualId();\n      if (usuarioId) {\n        this.materiaServicio.obtenerMateriasEstudiante(usuarioId).subscribe({\n          next: (datos) => {\n            this.materias = datos;\n            this.cargando = false;\n          },\n          error: (err) => {\n            this.error = 'Error al cargar materias registradas';\n            this.cargando = false;\n            console.error(err);\n          }\n        });\n      } else {\n        this.cargando = false;\n        this.error = 'No se pudo identificar al estudiante';\n      }\n    } else if (this.esProfesor) {\n      this.materiaServicio.obtenerMaterias(true).subscribe({\n        next: (datos) => {\n          this.materias = datos;\n          this.cargando = false;\n        },\n        error: (err) => {\n          this.error = 'Error al cargar materias del profesor';\n          this.cargando = false;\n          console.error(err);\n        }\n      });\n    } else {\n      this.materiaServicio.obtenerMaterias().subscribe({\n        next: (datos) => {\n          this.materias = datos;\n          this.cargando = false;\n        },\n        error: (err) => {\n          this.error = 'Error al cargar materias';\n          this.cargando = false;\n          console.error(err);\n        }\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}